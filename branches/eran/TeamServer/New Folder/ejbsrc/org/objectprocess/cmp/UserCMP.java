/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.cmp;

/**
 * CMP layer for User.
 * @lomboz generated
 */
public abstract class UserCMP
   extends org.objectprocess.cmp.UserBean
   implements javax.ejb.EntityBean
{

   /**
    * Generated ejbPostCreate for corresponding ejbCreate method.
    *
    * @see #ejbCreate(org.objectprocess.cmp.EditableUserValue editableUserValue)
    */
   public void ejbPostCreate(org.objectprocess.cmp.EditableUserValue editableUserValue)
   {
   }

   public void ejbLoad() 
   {
   }

   public void ejbStore() 
   {
   }

   public void ejbActivate() 
   {
   }

   public void ejbPassivate() 
   {

      EnhancedUserValue = null;
      UserValue = null;
      EditableUserValue = null;
      UpdatableUserValue = null;
   }

   public void setEntityContext(javax.ejb.EntityContext ctx) 
   {
      super.setEntityContext(ctx);
   }

   public void unsetEntityContext() 
   {
      super.unsetEntityContext();
   }

   public void ejbRemove() throws javax.ejb.RemoveException
   {

   }

 /* Value Objects BEGIN */

   public void addEnhancedWorkgroupPermissionsValue(org.objectprocess.cmp.EnhancedWorkgroupPermissionsValue added)
   throws javax.ejb.FinderException
   {
	  try
	  {
		  org.objectprocess.cmp.WorkgroupPermissionsPK pk = new org.objectprocess.cmp.WorkgroupPermissionsPK(added.getWorkgroupID(),added.getUserID());

		 org.objectprocess.cmp.WorkgroupPermissionsLocalHome home = org.objectprocess.cmp.WorkgroupPermissionsUtil.getLocalHome();

		 org.objectprocess.cmp.WorkgroupPermissionsLocal relation = home.findByPrimaryKey(pk);
		getWorkgroupPermissions().add(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.FinderException)
			throw (javax.ejb.FinderException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void removeEnhancedWorkgroupPermissionsValue(org.objectprocess.cmp.EnhancedWorkgroupPermissionsValue removed)
   throws javax.ejb.RemoveException
   {
	  try
	  {
		  org.objectprocess.cmp.WorkgroupPermissionsPK pk = new org.objectprocess.cmp.WorkgroupPermissionsPK(removed.getWorkgroupID(),removed.getUserID());

		 org.objectprocess.cmp.WorkgroupPermissionsLocalHome home = org.objectprocess.cmp.WorkgroupPermissionsUtil.getLocalHome();

		org.objectprocess.cmp.WorkgroupPermissionsLocal relation = home.findByPrimaryKey(pk);
		getWorkgroupPermissions().remove(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.RemoveException)
			throw (javax.ejb.RemoveException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void addEnhancedOpmModelPermissionsValue(org.objectprocess.cmp.EnhancedOpmModelPermissionsValue added)
   throws javax.ejb.FinderException
   {
	  try
	  {
		  org.objectprocess.cmp.OpmModelPermissionsPK pk = new org.objectprocess.cmp.OpmModelPermissionsPK(added.getOpmModelID(),added.getUserID());

		 org.objectprocess.cmp.OpmModelPermissionsLocalHome home = org.objectprocess.cmp.OpmModelPermissionsUtil.getLocalHome();

		 org.objectprocess.cmp.OpmModelPermissionsLocal relation = home.findByPrimaryKey(pk);
		getOpmModelPermissions().add(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.FinderException)
			throw (javax.ejb.FinderException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void removeEnhancedOpmModelPermissionsValue(org.objectprocess.cmp.EnhancedOpmModelPermissionsValue removed)
   throws javax.ejb.RemoveException
   {
	  try
	  {
		  org.objectprocess.cmp.OpmModelPermissionsPK pk = new org.objectprocess.cmp.OpmModelPermissionsPK(removed.getOpmModelID(),removed.getUserID());

		 org.objectprocess.cmp.OpmModelPermissionsLocalHome home = org.objectprocess.cmp.OpmModelPermissionsUtil.getLocalHome();

		org.objectprocess.cmp.OpmModelPermissionsLocal relation = home.findByPrimaryKey(pk);
		getOpmModelPermissions().remove(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.RemoveException)
			throw (javax.ejb.RemoveException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void addEnhancedCollaborativeSessionPermissionsValue(org.objectprocess.cmp.EnhancedCollaborativeSessionPermissionsValue added)
   throws javax.ejb.FinderException
   {
	  try
	  {
		  org.objectprocess.cmp.CollaborativeSessionPermissionsPK pk = new org.objectprocess.cmp.CollaborativeSessionPermissionsPK(added.getCollaborativeSessionID(),added.getUserID());

		 org.objectprocess.cmp.CollaborativeSessionPermissionsLocalHome home = org.objectprocess.cmp.CollaborativeSessionPermissionsUtil.getLocalHome();

		 org.objectprocess.cmp.CollaborativeSessionPermissionsLocal relation = home.findByPrimaryKey(pk);
		getCollaborativeSessionPermissions().add(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.FinderException)
			throw (javax.ejb.FinderException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void removeEnhancedCollaborativeSessionPermissionsValue(org.objectprocess.cmp.EnhancedCollaborativeSessionPermissionsValue removed)
   throws javax.ejb.RemoveException
   {
	  try
	  {
		  org.objectprocess.cmp.CollaborativeSessionPermissionsPK pk = new org.objectprocess.cmp.CollaborativeSessionPermissionsPK(removed.getCollaborativeSessionID(),removed.getUserID());

		 org.objectprocess.cmp.CollaborativeSessionPermissionsLocalHome home = org.objectprocess.cmp.CollaborativeSessionPermissionsUtil.getLocalHome();

		org.objectprocess.cmp.CollaborativeSessionPermissionsLocal relation = home.findByPrimaryKey(pk);
		getCollaborativeSessionPermissions().remove(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.RemoveException)
			throw (javax.ejb.RemoveException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   private org.objectprocess.cmp.EnhancedUserValue EnhancedUserValue = null;

   public org.objectprocess.cmp.EnhancedUserValue getEnhancedUserValue()
   {
      EnhancedUserValue = new org.objectprocess.cmp.EnhancedUserValue();
      try
         {
            EnhancedUserValue.setUserID( getUserID() );
            EnhancedUserValue.setLoginName( getLoginName() );
            EnhancedUserValue.setFirstName( getFirstName() );
            EnhancedUserValue.setLastName( getLastName() );
            EnhancedUserValue.setPassword( getPassword() );
            EnhancedUserValue.setEmail( getEmail() );
            EnhancedUserValue.setEnabled( getEnabled() );
            EnhancedUserValue.setLoggedIn( getLoggedIn() );
            EnhancedUserValue.setLastLoginTime( getLastLoginTime() );
            EnhancedUserValue.setDescription( getDescription() );
            EnhancedUserValue.setAdministrator( getAdministrator() );
            EnhancedUserValue.clearEnhancedWorkgroupsPermissions();
            java.util.Iterator iEnhancedWorkgroupsPermission = getWorkgroupPermissions().iterator();
            while (iEnhancedWorkgroupsPermission.hasNext()){
                EnhancedUserValue.addEnhancedWorkgroupsPermission( ((org.objectprocess.cmp.WorkgroupPermissionsLocal)iEnhancedWorkgroupsPermission.next()).getEnhancedWorkgroupPermissionsValue() );
            }
            EnhancedUserValue.cleanEnhancedWorkgroupsPermission();
            EnhancedUserValue.clearEnhancedOpmModelsPermissions();
            java.util.Iterator iEnhancedOpmModelsPermission = getOpmModelPermissions().iterator();
            while (iEnhancedOpmModelsPermission.hasNext()){
                EnhancedUserValue.addEnhancedOpmModelsPermission( ((org.objectprocess.cmp.OpmModelPermissionsLocal)iEnhancedOpmModelsPermission.next()).getEnhancedOpmModelPermissionsValue() );
            }
            EnhancedUserValue.cleanEnhancedOpmModelsPermission();
            EnhancedUserValue.clearEnhancedCollaborativeSessionsPermissions();
            java.util.Iterator iEnhancedCollaborativeSessionsPermission = getCollaborativeSessionPermissions().iterator();
            while (iEnhancedCollaborativeSessionsPermission.hasNext()){
                EnhancedUserValue.addEnhancedCollaborativeSessionsPermission( ((org.objectprocess.cmp.CollaborativeSessionPermissionsLocal)iEnhancedCollaborativeSessionsPermission.next()).getEnhancedCollaborativeSessionPermissionsValue() );
            }
            EnhancedUserValue.cleanEnhancedCollaborativeSessionsPermission();

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EnhancedUserValue;
   }
   private org.objectprocess.cmp.UserValue UserValue = null;

   public org.objectprocess.cmp.UserValue getUserValue()
   {
      UserValue = new org.objectprocess.cmp.UserValue();
      try
         {
            UserValue.setUserID( getUserID() );
            UserValue.setLoginName( getLoginName() );
            UserValue.setFirstName( getFirstName() );
            UserValue.setLastName( getLastName() );
            UserValue.setEmail( getEmail() );
            UserValue.setEnabled( getEnabled() );
            UserValue.setLoggedIn( getLoggedIn() );
            UserValue.setLastLoginTime( getLastLoginTime() );
            UserValue.setDescription( getDescription() );
            UserValue.setAdministrator( getAdministrator() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return UserValue;
   }
   private org.objectprocess.cmp.EditableUserValue EditableUserValue = null;

   public org.objectprocess.cmp.EditableUserValue getEditableUserValue()
   {
      EditableUserValue = new org.objectprocess.cmp.EditableUserValue();
      try
         {
            EditableUserValue.setUserID( getUserID() );
            EditableUserValue.setLoginName( getLoginName() );
            EditableUserValue.setFirstName( getFirstName() );
            EditableUserValue.setLastName( getLastName() );
            EditableUserValue.setPassword( getPassword() );
            EditableUserValue.setEmail( getEmail() );
            EditableUserValue.setDescription( getDescription() );
            EditableUserValue.setAdministrator( getAdministrator() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EditableUserValue;
   }
   private org.objectprocess.cmp.UpdatableUserValue UpdatableUserValue = null;

   public org.objectprocess.cmp.UpdatableUserValue getUpdatableUserValue()
   {
      UpdatableUserValue = new org.objectprocess.cmp.UpdatableUserValue();
      try
         {
            UpdatableUserValue.setUserID( getUserID() );
            UpdatableUserValue.setLoginName( getLoginName() );
            UpdatableUserValue.setFirstName( getFirstName() );
            UpdatableUserValue.setLastName( getLastName() );
            UpdatableUserValue.setPassword( getPassword() );
            UpdatableUserValue.setEmail( getEmail() );
            UpdatableUserValue.setEnabled( getEnabled() );
            UpdatableUserValue.setDescription( getDescription() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return UpdatableUserValue;
   }

   public void setEditableUserValue( org.objectprocess.cmp.EditableUserValue valueHolder )
   {

	  try
	  {
		 setLoginName( valueHolder.getLoginName() );
		 setFirstName( valueHolder.getFirstName() );
		 setLastName( valueHolder.getLastName() );
		 setPassword( valueHolder.getPassword() );
		 setEmail( valueHolder.getEmail() );
		 setDescription( valueHolder.getDescription() );
		 setAdministrator( valueHolder.getAdministrator() );

	  }
	  catch (Exception e)
	  {
		 throw new javax.ejb.EJBException(e);
	  }
   }
   public void setUpdatableUserValue( org.objectprocess.cmp.UpdatableUserValue valueHolder )
   {

	  try
	  {
		 setLoginName( valueHolder.getLoginName() );
		 setFirstName( valueHolder.getFirstName() );
		 setLastName( valueHolder.getLastName() );
		 setPassword( valueHolder.getPassword() );
		 setEmail( valueHolder.getEmail() );
		 setEnabled( valueHolder.getEnabled() );
		 setDescription( valueHolder.getDescription() );

	  }
	  catch (Exception e)
	  {
		 throw new javax.ejb.EJBException(e);
	  }
   }

/* Value Objects END */

   public abstract java.lang.String getUserID() ;

   public abstract void setUserID( java.lang.String userID ) ;

   public abstract java.lang.String getLoginName() ;

   public abstract void setLoginName( java.lang.String loginName ) ;

   public abstract java.lang.String getFirstName() ;

   public abstract void setFirstName( java.lang.String firstName ) ;

   public abstract java.lang.String getLastName() ;

   public abstract void setLastName( java.lang.String lastName ) ;

   public abstract java.lang.String getPassword() ;

   public abstract void setPassword( java.lang.String password ) ;

   public abstract java.lang.String getEmail() ;

   public abstract void setEmail( java.lang.String email ) ;

   public abstract java.lang.Boolean getEnabled() ;

   public abstract void setEnabled( java.lang.Boolean enabled ) ;

   public abstract java.lang.Boolean getLoggedIn() ;

   public abstract void setLoggedIn( java.lang.Boolean loggedIn ) ;

   public abstract java.util.Date getLastLoginTime() ;

   public abstract void setLastLoginTime( java.util.Date lastLoginTime ) ;

   public abstract java.lang.String getDescription() ;

   public abstract void setDescription( java.lang.String description ) ;

   public abstract java.lang.Boolean getAdministrator() ;

   public abstract void setAdministrator( java.lang.Boolean administrator ) ;

}
