/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.cmp;

/**
 * CMP layer for Workgroup.
 * @lomboz generated
 */
public abstract class WorkgroupCMP
   extends org.objectprocess.cmp.WorkgroupBean
   implements javax.ejb.EntityBean
{

   /**
    * Generated ejbPostCreate for corresponding ejbCreate method.
    *
    * @see #ejbCreate(org.objectprocess.cmp.EditableWorkgroupValue editableWorkgroupValue)
    */
   public void ejbPostCreate(org.objectprocess.cmp.EditableWorkgroupValue editableWorkgroupValue)
   {
   }

   public void ejbLoad() 
   {
   }

   public void ejbStore() 
   {
   }

   public void ejbActivate() 
   {
   }

   public void ejbPassivate() 
   {

      EnhancedWorkgroupValue = null;
      WorkgroupValue = null;
      EditableWorkgroupValue = null;
      UpdatableWorkgroupValue = null;
   }

   public void setEntityContext(javax.ejb.EntityContext ctx) 
   {
      super.setEntityContext(ctx);
   }

   public void unsetEntityContext() 
   {
      super.unsetEntityContext();
   }

   public void ejbRemove() throws javax.ejb.RemoveException
   {

   }

 /* Value Objects BEGIN */

   public void addEnhancedWorkgroupPermissionsValue(org.objectprocess.cmp.Enhanced2WorkgroupPermissionsValue added)
   throws javax.ejb.FinderException
   {
	  try
	  {
		  org.objectprocess.cmp.WorkgroupPermissionsPK pk = new org.objectprocess.cmp.WorkgroupPermissionsPK(added.getWorkgroupID(),added.getUserID());

		 org.objectprocess.cmp.WorkgroupPermissionsLocalHome home = org.objectprocess.cmp.WorkgroupPermissionsUtil.getLocalHome();

		 org.objectprocess.cmp.WorkgroupPermissionsLocal relation = home.findByPrimaryKey(pk);
		getWorkgroupPermissions().add(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.FinderException)
			throw (javax.ejb.FinderException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void removeEnhancedWorkgroupPermissionsValue(org.objectprocess.cmp.Enhanced2WorkgroupPermissionsValue removed)
   throws javax.ejb.RemoveException
   {
	  try
	  {
		  org.objectprocess.cmp.WorkgroupPermissionsPK pk = new org.objectprocess.cmp.WorkgroupPermissionsPK(removed.getWorkgroupID(),removed.getUserID());

		 org.objectprocess.cmp.WorkgroupPermissionsLocalHome home = org.objectprocess.cmp.WorkgroupPermissionsUtil.getLocalHome();

		org.objectprocess.cmp.WorkgroupPermissionsLocal relation = home.findByPrimaryKey(pk);
		getWorkgroupPermissions().remove(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.RemoveException)
			throw (javax.ejb.RemoveException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void addOpmModelValue(org.objectprocess.cmp.OpmModelValue added)
   throws javax.ejb.FinderException
   {
	  try
	  {
		  java.lang.String pk = added.getOpmModelID();

		 org.objectprocess.cmp.OpmModelLocalHome home = org.objectprocess.cmp.OpmModelUtil.getLocalHome();

		 org.objectprocess.cmp.OpmModelLocal relation = home.findByPrimaryKey(pk);
		getOpmModels().add(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.FinderException)
			throw (javax.ejb.FinderException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   public void removeOpmModelValue(org.objectprocess.cmp.OpmModelValue removed)
   throws javax.ejb.RemoveException
   {
	  try
	  {
		  java.lang.String pk = removed.getOpmModelID();

		 org.objectprocess.cmp.OpmModelLocalHome home = org.objectprocess.cmp.OpmModelUtil.getLocalHome();

		org.objectprocess.cmp.OpmModelLocal relation = home.findByPrimaryKey(pk);
		getOpmModels().remove(relation);
	  }
	  catch (Exception e){
		 if (e instanceof javax.ejb.RemoveException)
			throw (javax.ejb.RemoveException)e;
		 else
			throw new javax.ejb.EJBException(e);
	  }
   }

   private org.objectprocess.cmp.EnhancedWorkgroupValue EnhancedWorkgroupValue = null;

   public org.objectprocess.cmp.EnhancedWorkgroupValue getEnhancedWorkgroupValue()
   {
      EnhancedWorkgroupValue = new org.objectprocess.cmp.EnhancedWorkgroupValue();
      try
         {
            EnhancedWorkgroupValue.setWorkgroupID( getWorkgroupID() );
            EnhancedWorkgroupValue.setWorkgroupName( getWorkgroupName() );
            EnhancedWorkgroupValue.setEnabled( getEnabled() );
            EnhancedWorkgroupValue.setCreationTime( getCreationTime() );
            EnhancedWorkgroupValue.setDescription( getDescription() );
            EnhancedWorkgroupValue.clearWorkgroupsPermissions();
            java.util.Iterator iWorkgroupsPermission = getWorkgroupPermissions().iterator();
            while (iWorkgroupsPermission.hasNext()){
                EnhancedWorkgroupValue.addWorkgroupsPermission( ((org.objectprocess.cmp.WorkgroupPermissionsLocal)iWorkgroupsPermission.next()).getEnhanced2WorkgroupPermissionsValue() );
            }
            EnhancedWorkgroupValue.cleanWorkgroupsPermission();

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EnhancedWorkgroupValue;
   }
   private org.objectprocess.cmp.WorkgroupValue WorkgroupValue = null;

   public org.objectprocess.cmp.WorkgroupValue getWorkgroupValue()
   {
      WorkgroupValue = new org.objectprocess.cmp.WorkgroupValue();
      try
         {
            WorkgroupValue.setWorkgroupID( getWorkgroupID() );
            WorkgroupValue.setWorkgroupName( getWorkgroupName() );
            WorkgroupValue.setEnabled( getEnabled() );
            WorkgroupValue.setCreationTime( getCreationTime() );
            WorkgroupValue.setDescription( getDescription() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return WorkgroupValue;
   }
   private org.objectprocess.cmp.EditableWorkgroupValue EditableWorkgroupValue = null;

   public org.objectprocess.cmp.EditableWorkgroupValue getEditableWorkgroupValue()
   {
      EditableWorkgroupValue = new org.objectprocess.cmp.EditableWorkgroupValue();
      try
         {
            EditableWorkgroupValue.setWorkgroupID( getWorkgroupID() );
            EditableWorkgroupValue.setWorkgroupName( getWorkgroupName() );
            EditableWorkgroupValue.setDescription( getDescription() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EditableWorkgroupValue;
   }
   private org.objectprocess.cmp.UpdatableWorkgroupValue UpdatableWorkgroupValue = null;

   public org.objectprocess.cmp.UpdatableWorkgroupValue getUpdatableWorkgroupValue()
   {
      UpdatableWorkgroupValue = new org.objectprocess.cmp.UpdatableWorkgroupValue();
      try
         {
            UpdatableWorkgroupValue.setWorkgroupID( getWorkgroupID() );
            UpdatableWorkgroupValue.setWorkgroupName( getWorkgroupName() );
            UpdatableWorkgroupValue.setEnabled( getEnabled() );
            UpdatableWorkgroupValue.setDescription( getDescription() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return UpdatableWorkgroupValue;
   }

   public void setEditableWorkgroupValue( org.objectprocess.cmp.EditableWorkgroupValue valueHolder )
   {

	  try
	  {
		 setWorkgroupName( valueHolder.getWorkgroupName() );
		 setDescription( valueHolder.getDescription() );

	  }
	  catch (Exception e)
	  {
		 throw new javax.ejb.EJBException(e);
	  }
   }
   public void setUpdatableWorkgroupValue( org.objectprocess.cmp.UpdatableWorkgroupValue valueHolder )
   {

	  try
	  {
		 setWorkgroupName( valueHolder.getWorkgroupName() );
		 setEnabled( valueHolder.getEnabled() );
		 setDescription( valueHolder.getDescription() );

	  }
	  catch (Exception e)
	  {
		 throw new javax.ejb.EJBException(e);
	  }
   }

/* Value Objects END */

   public abstract java.lang.String getWorkgroupID() ;

   public abstract void setWorkgroupID( java.lang.String workgroupID ) ;

   public abstract java.lang.String getWorkgroupName() ;

   public abstract void setWorkgroupName( java.lang.String workgroupName ) ;

   public abstract java.lang.Boolean getEnabled() ;

   public abstract void setEnabled( java.lang.Boolean enabled ) ;

   public abstract java.util.Date getCreationTime() ;

   public abstract void setCreationTime( java.util.Date creationTime ) ;

   public abstract java.lang.String getDescription() ;

   public abstract void setDescription( java.lang.String description ) ;

}
