/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.cmp;

/**
 * CMP layer for Revision.
 * @lomboz generated
 */
public abstract class RevisionCMP
   extends org.objectprocess.cmp.RevisionBean
   implements javax.ejb.EntityBean
{

   /**
    * Generated ejbPostCreate for corresponding ejbCreate method.
    *
    * @see #ejbCreate(org.objectprocess.cmp.EditableRevisionValue editableRevisionValue)
    */
   public void ejbPostCreate(org.objectprocess.cmp.EditableRevisionValue editableRevisionValue)
   {
   }

   public void ejbLoad() 
   {
   }

   public void ejbStore() 
   {
   }

   public void ejbActivate() 
   {
   }

   public void ejbPassivate() 
   {

      MetaRevisionValue = null;
      FullRevisionValue = null;
      EditableRevisionValue = null;
   }

   public void setEntityContext(javax.ejb.EntityContext ctx) 
   {
      super.setEntityContext(ctx);
   }

   public void unsetEntityContext() 
   {
      super.unsetEntityContext();
   }

   public void ejbRemove() throws javax.ejb.RemoveException
   {

   }

 /* Value Objects BEGIN */

   private org.objectprocess.cmp.MetaRevisionValue MetaRevisionValue = null;

   public org.objectprocess.cmp.MetaRevisionValue getMetaRevisionValue()
   {
      MetaRevisionValue = new org.objectprocess.cmp.MetaRevisionValue();
      try
         {
            MetaRevisionValue.setRevisionID( getRevisionID() );
            MetaRevisionValue.setOpmModelID( getOpmModelID() );
            MetaRevisionValue.setEnabled( getEnabled() );
            MetaRevisionValue.setMajorRevision( getMajorRevision() );
            MetaRevisionValue.setMinorRevision( getMinorRevision() );
            MetaRevisionValue.setBuild( getBuild() );
            MetaRevisionValue.setCreationTime( getCreationTime() );
            MetaRevisionValue.setComitterID( getComitterID() );
            MetaRevisionValue.setDescription( getDescription() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return MetaRevisionValue;
   }
   private org.objectprocess.cmp.FullRevisionValue FullRevisionValue = null;

   public org.objectprocess.cmp.FullRevisionValue getFullRevisionValue()
   {
      FullRevisionValue = new org.objectprocess.cmp.FullRevisionValue();
      try
         {
            FullRevisionValue.setRevisionID( getRevisionID() );
            FullRevisionValue.setOpmModelID( getOpmModelID() );
            FullRevisionValue.setOpmModelFile( getOpmModelFile() );
            FullRevisionValue.setEnabled( getEnabled() );
            FullRevisionValue.setMajorRevision( getMajorRevision() );
            FullRevisionValue.setMinorRevision( getMinorRevision() );
            FullRevisionValue.setBuild( getBuild() );
            FullRevisionValue.setCreationTime( getCreationTime() );
            FullRevisionValue.setComitterID( getComitterID() );
            FullRevisionValue.setDescription( getDescription() );
            if ( getOpmModel() != null )
               FullRevisionValue.setOpmModel( getOpmModel().getOpmModelValue() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return FullRevisionValue;
   }
   private org.objectprocess.cmp.EditableRevisionValue EditableRevisionValue = null;

   public org.objectprocess.cmp.EditableRevisionValue getEditableRevisionValue()
   {
      EditableRevisionValue = new org.objectprocess.cmp.EditableRevisionValue();
      try
         {
            EditableRevisionValue.setRevisionID( getRevisionID() );
            EditableRevisionValue.setOpmModelID( getOpmModelID() );
            EditableRevisionValue.setOpmModelFile( getOpmModelFile() );
            EditableRevisionValue.setMajorRevision( getMajorRevision() );
            EditableRevisionValue.setMinorRevision( getMinorRevision() );
            EditableRevisionValue.setBuild( getBuild() );
            EditableRevisionValue.setComitterID( getComitterID() );
            EditableRevisionValue.setDescription( getDescription() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EditableRevisionValue;
   }

   public void setEditableRevisionValue( org.objectprocess.cmp.EditableRevisionValue valueHolder )
   {

	  try
	  {
		 setOpmModelID( valueHolder.getOpmModelID() );
		 setOpmModelFile( valueHolder.getOpmModelFile() );
		 setMajorRevision( valueHolder.getMajorRevision() );
		 setMinorRevision( valueHolder.getMinorRevision() );
		 setBuild( valueHolder.getBuild() );
		 setComitterID( valueHolder.getComitterID() );
		 setDescription( valueHolder.getDescription() );

	  }
	  catch (Exception e)
	  {
		 throw new javax.ejb.EJBException(e);
	  }
   }

/* Value Objects END */

   public abstract java.lang.String getRevisionID() ;

   public abstract void setRevisionID( java.lang.String revisionID ) ;

   public abstract java.lang.String getOpmModelID() ;

   public abstract void setOpmModelID( java.lang.String opmModelID ) ;

   public abstract java.lang.String getOpmModelFile() ;

   public abstract void setOpmModelFile( java.lang.String opmModelFile ) ;

   public abstract java.lang.Boolean getEnabled() ;

   public abstract void setEnabled( java.lang.Boolean enabled ) ;

   public abstract java.lang.Integer getMajorRevision() ;

   public abstract void setMajorRevision( java.lang.Integer majorRevision ) ;

   public abstract java.lang.Integer getMinorRevision() ;

   public abstract void setMinorRevision( java.lang.Integer minorRevision ) ;

   public abstract java.lang.Integer getBuild() ;

   public abstract void setBuild( java.lang.Integer build ) ;

   public abstract java.util.Date getCreationTime() ;

   public abstract void setCreationTime( java.util.Date creationTime ) ;

   public abstract java.lang.String getComitterID() ;

   public abstract void setComitterID( java.lang.String comitterID ) ;

   public abstract java.lang.String getDescription() ;

   public abstract void setDescription( java.lang.String description ) ;

}
