/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.cmp;

/**
 * Remote interface for Revision.
 * @lomboz generated
 */
public interface Revision
   extends javax.ejb.EJBObject
{
   /**
    * Returns the revision's id.
    * @return the revision's id.
    */
   public java.lang.String getRevisionID(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the revision's id.
    * @param revisionID the new revision id value.
    */
   public void setRevisionID( java.lang.String revisionID )
      throws java.rmi.RemoteException;

   /**
    * Returns the id for the OPM model the revision is based on.
    * @return the OPM model's id.
    */
   public java.lang.String getOpmModelID(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the id of the OPM model the revision is based on.
    * @param opmModelID the new OPM model id value.
    */
   public void setOpmModelID( java.lang.String opmModelID )
      throws java.rmi.RemoteException;

   /**
    * Returns the OPX file of the revision.
    * @return the OPX file.
    */
   public java.lang.String getOpmModelFile(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the OPX file for the revision.
    * @param opmModelFile the new OPX file value.
    */
   public void setOpmModelFile( java.lang.String opmModelFile )
      throws java.rmi.RemoteException;

   /**
    * Returns the revision's <code>enabled</code> flag value.
    * @return the enabled flag value.
    */
   public java.lang.Boolean getEnabled(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the revision's <code>enabled</code> flag value.
    * @param enabled the new <code>enabled</code> flag value.
    */
   public void setEnabled( java.lang.Boolean enabled )
      throws java.rmi.RemoteException;

   /**
    * Returns the revision's major revision number.
    * @return the major revision number.
    */
   public java.lang.Integer getMajorRevision(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the revision's major revision number.
    * @param revision the new major revision number value.
    */
   public void setMajorRevision( java.lang.Integer revision )
      throws java.rmi.RemoteException;

   /**
    * Returns the revision's minor revision number.
    * @return the minor revision number.
    */
   public java.lang.Integer getMinorRevision(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the revision's minor revision number.
    * @param revision the new minor revision value.
    */
   public void setMinorRevision( java.lang.Integer revision )
      throws java.rmi.RemoteException;

   /**
    * Returns the revision's build number.
    * @return the build number.
    */
   public java.lang.Integer getBuild(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the revision's build number,
    * @param build the new build number value.
    */
   public void setBuild( java.lang.Integer build )
      throws java.rmi.RemoteException;

   /**
    * Returns the creationTime
    * @return the creationTime
    */
   public java.util.Date getCreationTime(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the creationTime
    * @param creationTime the new creationTime value
    */
   public void setCreationTime( java.util.Date creationTime )
      throws java.rmi.RemoteException;

   /**
    * Returns the comitterID
    * @return the comitterID
    */
   public java.lang.String getComitterID(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the comitterID
    * @param comitterID the new comitterID value
    */
   public void setComitterID( java.lang.String comitterID )
      throws java.rmi.RemoteException;

   /**
    * Returns the description
    * @return the description
    */
   public java.lang.String getDescription(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the description
    * @param description the new description value
    */
   public void setDescription( java.lang.String description )
      throws java.rmi.RemoteException;

   public org.objectprocess.cmp.FullRevisionValue getFullRevisionValue(  )
      throws java.rmi.RemoteException;

   public org.objectprocess.cmp.EditableRevisionValue getEditableRevisionValue(  )
      throws java.rmi.RemoteException;

   public org.objectprocess.cmp.MetaRevisionValue getMetaRevisionValue(  )
      throws java.rmi.RemoteException;

}
