/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.cmp;

/**
 * CMP layer for CollaborativeSessionPermissions.
 * @lomboz generated
 */
public abstract class CollaborativeSessionPermissionsCMP
   extends org.objectprocess.cmp.CollaborativeSessionPermissionsBean
   implements javax.ejb.EntityBean
{

   /**
    * Generated ejbPostCreate for corresponding ejbCreate method.
    *
    * @see #ejbCreate(org.objectprocess.cmp.EditableCollaborativeSessionPermissionsValue editableCollaborativeSessionPermissionsValue)
    */
   public void ejbPostCreate(org.objectprocess.cmp.EditableCollaborativeSessionPermissionsValue editableCollaborativeSessionPermissionsValue)
   {
   }

   public void ejbLoad() 
   {
   }

   public void ejbStore() 
   {
   }

   public void ejbActivate() 
   {
   }

   public void ejbPassivate() 
   {

      EnhancedCollaborativeSessionPermissionsValue = null;
      Enhanced2CollaborativeSessionPermissionsValue = null;
      CollaborativeSessionPermissionsValue = null;
      EditableCollaborativeSessionPermissionsValue = null;
   }

   public void setEntityContext(javax.ejb.EntityContext ctx) 
   {
   }

   public void unsetEntityContext() 
   {
   }

   public void ejbRemove() throws javax.ejb.RemoveException
   {

   }

 /* Value Objects BEGIN */

   private org.objectprocess.cmp.EnhancedCollaborativeSessionPermissionsValue EnhancedCollaborativeSessionPermissionsValue = null;

   public org.objectprocess.cmp.EnhancedCollaborativeSessionPermissionsValue getEnhancedCollaborativeSessionPermissionsValue()
   {
      EnhancedCollaborativeSessionPermissionsValue = new org.objectprocess.cmp.EnhancedCollaborativeSessionPermissionsValue();
      try
         {
            EnhancedCollaborativeSessionPermissionsValue.setCollaborativeSessionID( getCollaborativeSessionID() );
            EnhancedCollaborativeSessionPermissionsValue.setUserID( getUserID() );
            EnhancedCollaborativeSessionPermissionsValue.setJoinTime( getJoinTime() );
            EnhancedCollaborativeSessionPermissionsValue.setAccessControl( getAccessControl() );
            if ( getCollaborativeSession() != null )
               EnhancedCollaborativeSessionPermissionsValue.setCollaborativeSession( getCollaborativeSession().getCollaborativeSessionValue() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EnhancedCollaborativeSessionPermissionsValue;
   }
   private org.objectprocess.cmp.Enhanced2CollaborativeSessionPermissionsValue Enhanced2CollaborativeSessionPermissionsValue = null;

   public org.objectprocess.cmp.Enhanced2CollaborativeSessionPermissionsValue getEnhanced2CollaborativeSessionPermissionsValue()
   {
      Enhanced2CollaborativeSessionPermissionsValue = new org.objectprocess.cmp.Enhanced2CollaborativeSessionPermissionsValue();
      try
         {
            Enhanced2CollaborativeSessionPermissionsValue.setCollaborativeSessionID( getCollaborativeSessionID() );
            Enhanced2CollaborativeSessionPermissionsValue.setUserID( getUserID() );
            Enhanced2CollaborativeSessionPermissionsValue.setJoinTime( getJoinTime() );
            Enhanced2CollaborativeSessionPermissionsValue.setAccessControl( getAccessControl() );
            if ( getUser() != null )
               Enhanced2CollaborativeSessionPermissionsValue.setUser( getUser().getUserValue() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return Enhanced2CollaborativeSessionPermissionsValue;
   }
   private org.objectprocess.cmp.CollaborativeSessionPermissionsValue CollaborativeSessionPermissionsValue = null;

   public org.objectprocess.cmp.CollaborativeSessionPermissionsValue getCollaborativeSessionPermissionsValue()
   {
      CollaborativeSessionPermissionsValue = new org.objectprocess.cmp.CollaborativeSessionPermissionsValue();
      try
         {
            CollaborativeSessionPermissionsValue.setCollaborativeSessionID( getCollaborativeSessionID() );
            CollaborativeSessionPermissionsValue.setUserID( getUserID() );
            CollaborativeSessionPermissionsValue.setJoinTime( getJoinTime() );
            CollaborativeSessionPermissionsValue.setAccessControl( getAccessControl() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return CollaborativeSessionPermissionsValue;
   }
   private org.objectprocess.cmp.EditableCollaborativeSessionPermissionsValue EditableCollaborativeSessionPermissionsValue = null;

   public org.objectprocess.cmp.EditableCollaborativeSessionPermissionsValue getEditableCollaborativeSessionPermissionsValue()
   {
      EditableCollaborativeSessionPermissionsValue = new org.objectprocess.cmp.EditableCollaborativeSessionPermissionsValue();
      try
         {
            EditableCollaborativeSessionPermissionsValue.setCollaborativeSessionID( getCollaborativeSessionID() );
            EditableCollaborativeSessionPermissionsValue.setUserID( getUserID() );
            EditableCollaborativeSessionPermissionsValue.setAccessControl( getAccessControl() );

         }
         catch (Exception e)
         {
            throw new javax.ejb.EJBException(e);
         }

	  return EditableCollaborativeSessionPermissionsValue;
   }

/* Value Objects END */

   public abstract java.lang.String getCollaborativeSessionID() ;

   public abstract void setCollaborativeSessionID( java.lang.String collaborativeSessionID ) ;

   public abstract java.lang.String getUserID() ;

   public abstract void setUserID( java.lang.String userID ) ;

   public abstract java.util.Date getJoinTime() ;

   public abstract void setJoinTime( java.util.Date joinTime ) ;

   public abstract java.lang.Integer getAccessControl() ;

   public abstract void setAccessControl( java.lang.Integer accessControl ) ;

}
