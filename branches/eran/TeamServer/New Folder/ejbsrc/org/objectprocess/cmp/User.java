/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.cmp;

/**
 * Remote interface for User.
 * @lomboz generated
 */
public interface User
   extends javax.ejb.EJBObject
{
   /**
    * Returns the user's id.
    * @return the user's id.
    */
   public java.lang.String getUserID(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's id.
    * @param userID The new user id value.
    */
   public void setUserID( java.lang.String userID )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's login name.
    * @return the user's login name.
    */
   public java.lang.String getLoginName(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's login name.
    * @param loginName the new login name value.
    */
   public void setLoginName( java.lang.String loginName )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's first name.
    * @return the user's first name.
    */
   public java.lang.String getFirstName(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's first name.
    * @param firstName the new first name value.
    */
   public void setFirstName( java.lang.String firstName )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's last name.
    * @return the user's last name.
    */
   public java.lang.String getLastName(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's last name.
    * @param lastName the new last name value.
    */
   public void setLastName( java.lang.String lastName )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's password.
    * @return the user's password.
    */
   public java.lang.String getPassword(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's password.
    * @param password the new password value.
    */
   public void setPassword( java.lang.String password )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's email.
    * @return the user's email.
    */
   public java.lang.String getEmail(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's email.
    * @param email the new email value.
    */
   public void setEmail( java.lang.String email )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's <code>enabled</code> flag value, Setting to <code>false</code> will deny the user's login.
    * @return the user's <code>enabled</code> flag value.
    */
   public java.lang.Boolean getEnabled(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's <code>enabled</code> flag value.
    * @param enabled the new <code>enabled</code> flag value.
    */
   public void setEnabled( java.lang.Boolean enabled )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's <code>loggedIn</code> flag value.
    * @return the user's <code>loggedIn</code> flag value.
    */
   public java.lang.Boolean getLoggedIn(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's <code>loggedIn</code> flag value.
    * @param loggenIn the new <code>loggedIn</code> flag value.
    */
   public void setLoggedIn( java.lang.Boolean loggenIn )
      throws java.rmi.RemoteException;

   /**
    * Returns the last time the user has logged in, updates every login.
    * @return the last time the user has logged in.
    */
   public java.util.Date getLastLoginTime(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's last login time stamp.
    * @param lastLoginTime the new login time value.
    */
   public void setLastLoginTime( java.util.Date lastLoginTime )
      throws java.rmi.RemoteException;

   /**
    * Returns the user's description string.
    * @return the user's description.
    */
   public java.lang.String getDescription(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the user's description string.
    * @param description the new description value.
    */
   public void setDescription( java.lang.String description )
      throws java.rmi.RemoteException;

   /**
    * Returns the <code>administrator</code> flag value.
    * @return the <code>administrator</code> flag value.
    */
   public java.lang.Boolean getAdministrator(  )
      throws java.rmi.RemoteException;

   /**
    * Sets the <code>administrator</code> flag value.
    * @param administrator the new the <code>administrator</code> flag value.
    */
   public void setAdministrator( java.lang.Boolean administrator )
      throws java.rmi.RemoteException;

}
