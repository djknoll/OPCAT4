/*
 * Generated by XDoclet - Do not edit!
 */
package org.objectprocess.session;

/**
 * Remote interface for OpmModelAccess.
 * @lomboz generated
 */
public interface OpmModelAccess
   extends javax.ejb.EJBObject
{
   /**
    * returns an OPM model value object for the given OPM model id.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param opmModelID primary key for the requested OPM model.
    * @return the OPM model value object.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws OpmModelLookupFault if the requested OPM model could not be found.
    */
   public org.objectprocess.cmp.OpmModelValue getOpmModelByPK( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns an enhanced OPM model value object for the given OPM model id.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param opmModelID primary key for the requested OPM model.
    * @return the enhanced OPM model value object.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws OpmModelLookupFault if the requested OPM model could not be found.
    */
   public org.objectprocess.cmp.EnhancedOpmModelValue getEnhancedOpmModelByPK( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns an OPM model revision value object for the given OPM model id.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param opmModelID primary key for the requested OPM model.
    * @return the OPM model revision value object.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws OpmModelLookupFault if the requested OPM model could not be found.
    */
   public org.objectprocess.cmp.OpmModelRevisionsValue getOpmModelRevisionsByPK( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns an array list of <code>MetaRevisionValue</code> objects OPM model. note: method is replaced by <code>getOpmModelRevisionsByPK</code>.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @return the list of all OPM models.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws NoRevisionsFoundFault if no revisions were found.
    * @deprecated 
    */
   public java.util.ArrayList getAllRevisions( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns an array list of OPM moodel value objects for all OPM models in the system.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @return the list of all OPM models.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws NoOpmModelsFoundFault if no OPM models were found.
    */
   public java.util.ArrayList getAllOpmModels( java.lang.String sUserID,java.lang.String sPassword )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns a meta revision value object for the given revision id.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param revisionID primary key for the requested revision.
    * @return the meta revision value object.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws RevisionLookupFault if the requested revision could not be found.
    */
   public org.objectprocess.cmp.MetaRevisionValue getMetaRevisionByPK( java.lang.String sUserID,java.lang.String sPassword,java.lang.String revisionID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns a full revision value object for the given revision id. Full revision value object encapsulates the OPM model revision document and its meta information.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param revisionID primary key for the requested revision.
    * @return the full revision value object.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws RevisionLookupFault if the requested revision could not be found.
    */
   public org.objectprocess.cmp.FullRevisionValue getRevisionByPK( java.lang.String sUserID,java.lang.String sPassword,java.lang.String revisionID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns an array list of collaborative session value objects for the specified OPM model.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @return the list of all collaborative sessions.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws NoSessionsFoundFault if no collaborative sessions were found.
    */
   public java.util.ArrayList getCollaborativeSessionsForOpmModel( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * Returns an array list of meta revision value objects for all revisions with build numbers greater then the given revision. The method <code>getPreCommit</code> should be used in conjunction with <code>CollaborativeSessionAccessBean.commitCollaborativeSession</code> and is used to attain meta information for all revisions that were committed after the collaborative session's base revision was committed. clients can then choose to merge with any of those revisions before they commit the new revision.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param revisionID primary key for the revision.
    */
   public java.util.ArrayList getPreCommit( java.lang.String sUserID,java.lang.String sPassword,java.lang.String revisionID )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * returns an enhanced OPM model permissions value object for the given OPM model permissions primary key. An enhanced OPM model permissions value object include a corresponding OPM model value object.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param opmModelPermissionsPK primary key for the requested OPM model permissions.
    * @return the enhanced OPM model permissions value object.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws PermissionLookupFault if the requested OPM model permissions could not be found.
    */
   public org.objectprocess.cmp.EnhancedOpmModelPermissionsValue getEnhancedOpmModelPermissionsByPK( java.lang.String sUserID,java.lang.String sPassword,org.objectprocess.cmp.OpmModelPermissionsPK opmModelPermissionsPK )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * sets the OPM model permissions according to the editable OPM model permissions value object. if the permissions already exist they will be updated, otherwise new permissions will be created.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param editableOpmModelPermissionsValue an editable OPM model permissions value object containing the new permissions.
    * @throws AuthenticationFailedFault if user authentication failed.
    */
   public void setOpmModelPermissions( java.lang.String sUserID,java.lang.String sPassword,org.objectprocess.cmp.EditableOpmModelPermissionsValue editableOpmModelPermissionsValue )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, java.rmi.RemoteException;

   /**
    * updates the OPM model entry with the given updatable OPM model value object.
    * @param sUserID workgroup id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param updatableOpmModelValue updatable OPM model value encapsulating the information to be updated.
    * @throws AuthenticationFailedFault if OPM model authentication failed.
    * @throws NoSuchOpmModelFault if the requested OPM model could not be found.
    */
   public void updateOpmModel( java.lang.String sUserID,java.lang.String sPassword,org.objectprocess.cmp.UpdatableOpmModelValue updatableOpmModelValue )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * marks the requested OPM model as disabled. If <code>recursive</code> is set to <code>true</code> all collaborative sessions for the OPM model will recursively be disabled. If set to <code>false</code> the procedure will check that all collaborative sessions in the OPM model are disabled before disabling the OPM model. if enabled collaborative sessions are found the OPM model will not be disabled and a <code>RecursiveDisableFault</code> will be raised.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param opmModelID primary key for OPM model to be disabled.
    * @param recursive a boolean denoting if simple or a recursive disable should be preformed.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws NoSuchOpmModelFault if the requested OPM model could not be found.
    * @throws RecursiveDisableFault if <code>recursive</code> is set to true and enabled collaborative sessions are found for the OPM model.
    */
   public void disableOpmModel( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID,boolean recursive )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, org.objectprocess.fault.recursiveDisable.RecursiveDisableFault, java.rmi.RemoteException;

   /**
    * marks the requested OPM model as enabled. If <code>recursive</code> is set to <code>true</code> all collaborative sessions for the OPM model will recursively be enabled. If set to <code>false</code> only the requested OPM model will be enabled.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param opmModelID primary key for OPM model to be disabled.
    * @param recursive a boolean denoting if simple or a recursive enable should be preformed.
    * @throws AuthenticationFailedFault if user authentication failed.
    * @throws NoSuchOpmModelFault if the requested OPM model could not be found.
    */
   public void enableOpmModel( java.lang.String sUserID,java.lang.String sPassword,java.lang.String opmModelID,boolean recursive )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.lookup.LookupFault, java.rmi.RemoteException;

   /**
    * creates a new OPM model entry based on the information in the editable OPM model value object. an editable OPM model value object contains all OPM model attributes that can be initialized during creation.
    * @param sUserID user id for the user performing the action.
    * @param sPassword password for the user performing the action.
    * @param editableOpmModelValue the editable OPM model value object containing the editable OPM model attributes.
    * @return GUID primary key for the new OPM model.
    * @throws OpmModelAlreadyExistFault if an OPM model with the requested name already exists.
    */
   public java.lang.String createOpmModel( java.lang.String sUserID,java.lang.String sPassword,org.objectprocess.cmp.EditableOpmModelValue editableOpmModelValue )
      throws org.objectprocess.fault.authenticate.AuthenticationFailedFault, org.objectprocess.fault.create.CreationFault, java.rmi.RemoteException;

}
