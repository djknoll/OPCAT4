//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.12.01 at 04:25:51 GMT+02:00 
//


package extensionTools.opl2.generated.impl;

public class TimeValueTypeImpl implements extensionTools.opl2.generated.TimeValueType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected boolean has_Seconds;
    protected int _Seconds;
    protected boolean has_Minutes;
    protected int _Minutes;
    protected boolean has_Years;
    protected int _Years;
    protected boolean has_Months;
    protected int _Months;
    protected boolean has_Hours;
    protected int _Hours;
    protected boolean has_Days;
    protected int _Days;
    protected boolean has_MilliSeconds;
    protected int _MilliSeconds;
    protected boolean has_Weeks;
    protected int _Weeks;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\r\u0099\u00d1\u00c3ppsq\u0000~\u0000\u0000\u000b\u00e6\u0097\u008appsq\u0000~\u0000\u0000\n3]Qppsq\u0000~\u0000\u0000\b\u0080#\u0018ppsq\u0000~\u0000\u0000\u0006\u00cc\u00e8\u00dfppsq\u0000~\u0000\u0000\u0005\u0019\u00ae\u00a6ppsq\u0000~\u0000\u0000\u0003ftmppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00b3:4ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00b3:)sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00b3:\u001eppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0003intsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000 sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005Yearst\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\u0012\u0001psq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\u0006Monthsq\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\u0005Weeksq\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\u0004Daysq\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\u0005Hoursq\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\u0007Minutesq\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\u0007Secondsq\u0000~\u0000-q\u0000~\u0000/sq\u0000~\u0000\f\u0001\u00b3:4ppsq\u0000~\u0000\u000e\u0001\u00b3:)q\u0000~\u0000\u0013p\u0000q\u0000~\u0000\u0017sq\u0000~\u0000)t\u0000\fMilliSecondsq\u0000~\u0000-q\u0000~\u0000/sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000N[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000f\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppq\u0000~\u0000\bppppppppppppppppppppppppppppppq\u0000~\u0000\npppppppppppppppppq\u0000~\u0000\u0005ppppppppppppq\u0000~\u0000\rq\u0000~\u00001q\u0000~\u00005q\u0000~\u00009q\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Eq\u0000~\u0000Ippppppppppq\u0000~\u0000\u0007ppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppppppppppppppppppq\u0000~\u0000\u000bpppppppppppppppppq\u0000~\u0000\u0006ppppppppppppppppp");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return extensionTools.opl2.generated.TimeValueType.class;
    }

    public int getSeconds() {
        return _Seconds;
    }

    public void setSeconds(int value) {
        _Seconds = value;
        has_Seconds = true;
    }

    public int getMinutes() {
        return _Minutes;
    }

    public void setMinutes(int value) {
        _Minutes = value;
        has_Minutes = true;
    }

    public int getYears() {
        return _Years;
    }

    public void setYears(int value) {
        _Years = value;
        has_Years = true;
    }

    public int getMonths() {
        return _Months;
    }

    public void setMonths(int value) {
        _Months = value;
        has_Months = true;
    }

    public int getHours() {
        return _Hours;
    }

    public void setHours(int value) {
        _Hours = value;
        has_Hours = true;
    }

    public int getDays() {
        return _Days;
    }

    public void setDays(int value) {
        _Days = value;
        has_Days = true;
    }

    public int getMilliSeconds() {
        return _MilliSeconds;
    }

    public void setMilliSeconds(int value) {
        _MilliSeconds = value;
        has_MilliSeconds = true;
    }

    public int getWeeks() {
        return _Weeks;
    }

    public void setWeeks(int value) {
        _Weeks = value;
        has_Weeks = true;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new extensionTools.opl2.generated.impl.TimeValueTypeImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Years) {
            context.startElement("", "Years");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Years)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Months) {
            context.startElement("", "Months");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Months)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Weeks) {
            context.startElement("", "Weeks");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Weeks)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Days) {
            context.startElement("", "Days");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Days)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Hours) {
            context.startElement("", "Hours");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Hours)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Minutes) {
            context.startElement("", "Minutes");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Minutes)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Seconds) {
            context.startElement("", "Seconds");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Seconds)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_MilliSeconds) {
            context.startElement("", "MilliSeconds");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MilliSeconds)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (extensionTools.opl2.generated.TimeValueType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "-----------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return extensionTools.opl2.generated.impl.TimeValueTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    if (("" == ___uri)&&("Hours" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    if (("" == ___uri)&&("Weeks" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 5;
                        return ;
                    }
                    if (("" == ___uri)&&("Months" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 11;
                        return ;
                    }
                    if (("" == ___uri)&&("Minutes" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 3;
                        return ;
                    }
                    if (("" == ___uri)&&("Days" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 13;
                        return ;
                    }
                    if (("" == ___uri)&&("Seconds" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 9;
                        return ;
                    }
                    if (("" == ___uri)&&("Years" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 7;
                        return ;
                    }
                    if (("" == ___uri)&&("MilliSeconds" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 15;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  6 :
                    if (("" == ___uri)&&("Weeks" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  16 :
                    if (("" == ___uri)&&("MilliSeconds" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  8 :
                    if (("" == ___uri)&&("Years" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  0 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  10 :
                    if (("" == ___uri)&&("Seconds" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  12 :
                    if (("" == ___uri)&&("Months" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  4 :
                    if (("" == ___uri)&&("Minutes" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  2 :
                    if (("" == ___uri)&&("Hours" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  14 :
                    if (("" == ___uri)&&("Days" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  9 :
                        try {
                            _Seconds = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Seconds = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 10;
                        return ;
                    case  13 :
                        try {
                            _Days = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Days = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 14;
                        return ;
                    case  7 :
                        try {
                            _Years = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Years = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 8;
                        return ;
                    case  0 :
                        revertToParentFromText(value);
                        return ;
                    case  1 :
                        try {
                            _Hours = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Hours = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 2;
                        return ;
                    case  15 :
                        try {
                            _MilliSeconds = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_MilliSeconds = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 16;
                        return ;
                    case  5 :
                        try {
                            _Weeks = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Weeks = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 6;
                        return ;
                    case  3 :
                        try {
                            _Minutes = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Minutes = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 4;
                        return ;
                    case  11 :
                        try {
                            _Months = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            has_Months = true;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 12;
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

    }

}
