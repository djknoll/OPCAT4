<?xml version="1.0" encoding="UTF-8"?>
<project name="opcat2" default="cleanup" basedir=".">

	<property name="installer" value="C:\Program Files\Inno Setup 5\Compil32.Exe" />
	
	<property name="reposurl" value="https://www.opcat.com/svn/OPCAT_Inc/Opcat/trunk" />
	<property name="svnantpath" value="c:\eclipse\svnant" />
	<property name="svnantlibpath" value="${svnantpath}\lib" />
	<property name="version" value="3.0" />
	<property name="remote" value="false" />
	<property name="viewer" value="false" />
	<property name="skinname" value="Metal" />
	<property name="things" value="900" />
	<property name="base_dir" value="remote(${remote})_${version}_${things}_viewer(${viewer})" />
	<property name="root_dir" value="c:\OPCAT_Build\${base_dir}" />

	<delete dir="${root_dir}" />
	<mkdir dir="${root_dir}" />

	<condition property="doviewer">
		<and>
			<istrue value="${viewer}" />
		</and>
	</condition>
	
	
	<!--
	<condition property="things" value="0">
		<and>
			<isfalse value="${viewer}" />
		</and>
	</condition>	
	-->
	
	
	<condition property="doremote">
		<and>
			<istrue value="${remote}" />
		</and>
	</condition>

	<condition property="dolocal">
		<and>
			<isfalse value="${remote}" />
		</and>
	</condition>

	<target name="viewer" if="doviewr">

	</target>

	<target name="remote" if="doremote">

		<!-- path to the svnant libraries. Usually they will be located in ANT_HOME/lib -->
		<path id="svn.classpath">
			<pathelement location="${svnantlibpath}\svnjavahl.jar" />
			<pathelement location="${svnantlibpath}\svnant.jar" />
			<pathelement location="${svnantlibpath}\svnClientAdapter.jar" />
			<pathelement location="${svnantlibpath}\javasvn.jar" />
			<pathelement location="${svnantlibpath}\javasvn-cli.jar" />
			<pathelement location="${svnantlibpath}\javasvn-javahl.jar" />
		</path>

		<!-- load the svn task -->
		<taskdef resource="svntask.properties" classpathref="svn.classpath" />

		<svn username="raanan" password="kfiryeal">
			<checkout url="${reposurl}" destPath="${root_dir}" />
		</svn>
	</target>

	<target name="local" if="dolocal">
		<copy todir="${root_dir}">
			<fileset dir="${basedir}" />
		</copy>
	</target>

	<target name="init" depends="viewer,local,remote" description="Delete all generated directories, and creates new ones">


		<tstamp>
			<format property="TODAY" pattern="d-MMMM-yyyy" locale="en" />
		</tstamp>


		<path id="classpath">
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<property name="bin_dir" value="${root_dir}\bin" />
		<mkdir dir="${bin_dir}" />

		<property name="restricted" value="${root_dir}\Build\restricted\temp" />
		<property name="unrestricted" value="${root_dir}\Build\unrestricted\temp" />

		<mkdir dir="${root_dir}/Build/restricted" />
		<mkdir dir="${root_dir}/Build/unrestricted" />
		<mkdir dir="${restricted}" />
		<mkdir dir="${unrestricted}" />

		<replace file="${root_dir}/whatsnew.txt" token="{vesrion}" value="${version}" />

		<replace file="${root_dir}/src/gui/AboutDialog.java" token="Version:       VERSION" value="Version:       ${version}" />
		<replace file="${root_dir}/src/gui/AboutDialog.java" token="Date:  CompileDate" value="Date:  ${TODAY}" />
		<touch file="${root_dir}/src/gui/AboutDialog.java" />

		<replace file="${root_dir}/src/gui/license/RestrictedLicense.java" token="private static final int MAX_NUM_OF_THINGS = 150;" value="private static final int MAX_NUM_OF_THINGS = ${things};" />
		<touch file="${root_dir}/src/gui/license/RestrictedLicense.java" />

		<replace file="${root_dir}/src/gui/Opcat2.java" token="Debug.setDebugLevelToCore();" value="Debug.setLEVEL(0);" />

		<!-- 
			<replace file="${root_dir}/src/gui/Opcat2.java" token="boolean viewer = false ; //do not change this line auto frm compiler" value="boolean viewer = ${viewer} ; //do not change this line auto frm compiler" />
		-->
		<replace file="${root_dir}/src/gui/Opcat2.java" token="replaced by auto build skin xxxxxx" value="${skinname}" />


		<touch file="${root_dir}/src/gui/Opcat2.java" />
		<touch file="${root_dir}/src/gui/util/debug/Debug.java" />

		<delete dir="${unrestricted}" />
		<mkdir dir="${unrestricted}" />
		<mkdir dir="${unrestricted}/examples" />
		<mkdir dir="${unrestricted}/help" />
		<mkdir dir="${unrestricted}/lib" />
		<mkdir dir="${unrestricted}/Output" />
		<mkdir dir="${unrestricted}/codeGenerator" />
		<mkdir dir="${unrestricted}/api" />
		<mkdir dir="${unrestricted}/api/doc" />
		<copy todir="${unrestricted}/examples">
			<fileset dir="${root_dir}/Examples" />
		</copy>
		<copy todir="${unrestricted}/help">
			<fileset dir="${root_dir}/help" />
		</copy>
		<copy todir="${unrestricted}/codeGenerator">
			<fileset dir="${root_dir}/codeGenerator" />
		</copy>
		<copy todir="${unrestricted}/lib">
			<fileset dir="${root_dir}/lib" />
		</copy>
		<copy todir="${unrestricted}/api">
			<fileset dir="${root_dir}/lib" />
		</copy>
		<copy file="${root_dir}/Build/Opcat2_16x16.ico" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/Opcat2_32x32.ICO" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/Opcat2.html" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/conf.txt" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/error.log" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/unrestricted.iss" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/unrestricted_license.lic" tofile="${unrestricted}/license.lic" />
		<copy file="${root_dir}/Build/doreq" tofile="${unrestricted}/doreq" />
		<copy file="${root_dir}/Build/Opcat2.exe" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/salicense.dat" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/Dataform.xlt" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/systems.ops" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/colors.ops" todir="${unrestricted}" />
		<copy file="${root_dir}/Build/opcat.bat" todir="${unrestricted}" />
		<copy file="${root_dir}/lib/pgs.properties" todir="${unrestricted}" />


		<delete dir="${restricted}" />
		<mkdir dir="${restricted}" />
		<mkdir dir="${restricted}/examples" />
		<mkdir dir="${restricted}/help" />
		<mkdir dir="${restricted}/lib" />
		<mkdir dir="${restricted}/Output" />
		<mkdir dir="${restricted}/codeGenerator" />
		<mkdir dir="${restricted}/api" />
		<mkdir dir="${restricted}/api/doc" />
		<copy todir="${restricted}/examples">
			<fileset dir="${root_dir}/Examples" />
		</copy>
		<copy todir="${restricted}/help">
			<fileset dir="${root_dir}/help" />
		</copy>
		<copy todir="${restricted}/codeGenerator">
			<fileset dir="${root_dir}/codeGenerator" />
		</copy>
		<copy todir="${restricted}/lib">
			<fileset dir="${root_dir}/lib" />
		</copy>
		<copy todir="${restricted}/api">
			<fileset dir="${root_dir}/lib" />
		</copy>
		<copy file="${root_dir}/Build/Opcat2_32x32.ICO" todir="${restricted}" />
		<copy file="${root_dir}/Build/Opcat2_16x16.ico" todir="${restricted}" />
		<copy file="${root_dir}/Build/Opcat2.html" todir="${restricted}" />
		<copy file="${root_dir}/Build/conf.txt" todir="${restricted}" />
		<copy file="${root_dir}/Build/error.log" todir="${restricted}" />
		<copy file="${root_dir}/Build/restricted.iss" todir="${restricted}" />
		<copy file="${root_dir}/Build/restricted_license.lic" tofile="${restricted}/license.lic" />
		<copy file="${root_dir}/Build/doreq" tofile="${restricted}/doreq" />
		<copy file="${root_dir}/Build/Opcat2.exe" todir="${restricted}" />
		<copy file="${root_dir}/Build/RestrictedVersionEULA.rtf" todir="${restricted}" />
		<copy file="${root_dir}/Build/salicense.dat" todir="${restricted}" />
		<copy file="${root_dir}/Build/Dataform.xlt" todir="${restricted}" />
		<copy file="${root_dir}/Build/systems.ops" todir="${restricted}" />
		<copy file="${root_dir}/Build/colors.ops" todir="${restricted}" />
		<copy file="${root_dir}/Build/opcat.bat" todir="${restricted}" />
		<copy file="${root_dir}/lib/pgs.properties" todir="${restricted}" />		


	</target>


	<target name="jar" description="JARs the Task" depends="init">


		<!-- source="1.4" target="1.4" -->

		<javac srcdir="${root_dir}/src" destdir="${bin_dir}" nowarn="true">
			<classpath refid="classpath" />
		</javac>

		<copy todir="${bin_dir}">
			<fileset dir="${root_dir}/src" casesensitive="no">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<jar destfile="${restricted}/Opcat2.jar" basedir="${bin_dir}">
			<manifest>
				<attribute name="Main-Class" value="gui.Opcat2" />
				<attribute name="Class-Path" value="				lib/activation.jar		lib/jaxb-api.jar
				lib/axis.jar                lib/lib/jaxb-impl.jar   lib/jbossall-client.jar	lib/tablelib.jar
				lib/CodeGenerator.jar       lib/jaxb-libs.jar    	lib/jdom.jar            lib/wsdl4j.jar
				lib/commons-beanutils.jar   lib/jaxb-xjc.jar     	lib/jena.jar            lib/xalan.jar
				lib/commons-collections.jar lib/jaxp-api.jar     	lib/jta-spec1_0_1.jar   lib/xercesImpl.jar
				lib/commons-digester.jar    lib/jax-qname.jar    	lib/log4j-1.2.8.jar     lib/xmlsec.jar
				lib/commons-discovery.jar   lib/jaxrpc-api.jar   	lib/mail.jar            lib/xsdlib.jar
				lib/commons-logging.jar     lib/jaxrpc-impl.jar 	lib/namespace.jar		lib/jaas.jar
				lib/jaxrpc.jar       		lib/relaxngDatatype.jar	lib/jaxrpc-spi.jar	    lib/skinlf.jar 
        		lib/skins.zip 				lib/csv.jar 			lib/PgsLookAndFeel.jar	lib/PgsLookAndFeel-jide.jar
				lib/swingfx.jar				lib/AnimatingCardLayout.jar lib/ 				images/ 	
				lib/hsqldb.jar				. " />
			</manifest>
		</jar>

		<jar destfile="${unrestricted}/Opcat2.jar" basedir="${bin_dir}">
			<manifest>
				<attribute name="Main-Class" value="gui.Opcat2" />
				<attribute name="Class-Path" value="				lib/activation.jar		lib/jaxb-api.jar 
				lib/axis.jar                lib/lib/jaxb-impl.jar   lib/jbossall-client.jar	lib/tablelib.jar
				lib/CodeGenerator.jar       lib/jaxb-libs.jar    	lib/jdom.jar            lib/wsdl4j.jar
				lib/commons-beanutils.jar   lib/jaxb-xjc.jar     	lib/jena.jar            lib/xalan.jar
				lib/commons-collections.jar lib/jaxp-api.jar     	lib/jta-spec1_0_1.jar   lib/xercesImpl.jar
				lib/commons-digester.jar    lib/jax-qname.jar    	lib/log4j-1.2.8.jar     lib/xmlsec.jar
				lib/commons-discovery.jar   lib/jaxrpc-api.jar   	lib/mail.jar            lib/xsdlib.jar
				lib/commons-logging.jar     lib/jaxrpc-impl.jar 	lib/namespace.jar		lib/jaas.jar
				lib/jaxrpc.jar       		lib/relaxngDatatype.jar	lib/jaxrpc-spi.jar	    lib/skinlf.jar 
        		lib/skins.zip 				lib/csv.jar 			lib/PgsLookAndFeel.jar	lib/PgsLookAndFeel-jide.jar
				lib/swingfx.jar				lib/AnimatingCardLayout.jar  lib/ 				images/ 
				lib/hsqldb.jar				. " />
			</manifest>
		</jar>

		<javadoc destdir="${unrestricted}/api/doc" author="true" version="true" use="true" windowtitle="OPCAT II API">

			<fileset dir="${root_dir}\src" defaultexcludes="yes">
				<include name="exportedAPI/**" />
				<exclude name="com/dummy/test/doc-files/**" />
			</fileset>

			<doctitle>
				<![CDATA[<h1>OPCAT II</h1>]]></doctitle>
		<bottom>
			<![CDATA[<i>Copyright &#169; 2005 OPCAT Inc. All Rights Reserved.</i>]]></bottom>
	<tag name="todo" scope="all" description="To do:" />
	<group title="OPCAT II API read only" packages="src.exportedAPI.opcatAPI.*" />
	<group title="OPCAT II API read/write" packages="src.exportedAPI.opcatAPIX.*" />
	<link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp" />
	<link href="http://developer.java.sun.com/developer/products/xml/docs/api/" />
</javadoc>

<copy file="${unrestricted}/Opcat2.jar" tofile="${unrestricted}/api/Opcat2.jar" />

<javadoc destdir="${restricted}/api/doc" author="true" version="true" use="true" windowtitle="OPCAT II API">

	<fileset dir="${root_dir}\src" defaultexcludes="yes">
		<include name="exportedAPI/**" />
		<exclude name="com/dummy/test/doc-files/**" />
	</fileset>

	<doctitle>
		<![CDATA[<h1>OPCAT II</h1>]]></doctitle>
<bottom>
	<![CDATA[<i>Copyright &#169; 2005 OPCAT Inc. All Rights Reserved.</i>]]></bottom>
<tag name="todo" scope="all" description="To do:" />
<group title="OPCAT II API read only" packages="src.exportedAPI.opcatAPI.*" />
<group title="OPCAT II API read/write" packages="src.exportedAPI.opcatAPIX.*" />
<link offline="true" href="http://java.sun.com/products/jdk/1.2/docs/api/" packagelistLoc="C:\tmp" />
<link href="http://developer.java.sun.com/developer/products/xml/docs/api/" />
</javadoc>
<copy file="${restricted}/Opcat2.jar" tofile="${restricted}/api/Opcat2.jar" />

</target>

<target name="setup" description="make setup files" depends="jar">

<exec dir="${restricted}" executable="${installer}">
<arg line="/cc ${restricted}\restricted.iss" />
</exec>

<exec dir="${unrestricted}" executable="${installer}">
<arg line="/cc ${unrestricted}\unrestricted.iss" />
</exec>

</target>

<target name="cleanup" description="clean unneeded files and directories" depends="setup">
<copy file="${unrestricted}/Output/unrestricted.exe" tofile="${unrestricted}/../setup.exe" />
<copy file="${restricted}/Output/restricted.exe" tofile="${restricted}/../setup.exe" />
<copy file="${root_dir}/Build/Autorun.inf" tofile="${unrestricted}/../Autorun.inf" />
<copy file="${root_dir}/Build/Autorun.inf" tofile="${restricted}/../Autorun.inf" />
<copy file="${root_dir}/whatsnew.txt" tofile="${unrestricted}/../whatsnew.txt" />
<copy file="${root_dir}/whatsnew.txt" tofile="${restricted}/../whatsnew.txt" />
<zip destfile="${unrestricted}/../api.zip" basedir="${unrestricted}/api" />
<zip destfile="${restricted}/../api.zip" basedir="${restricted}/api" />
<delete dir="${unrestricted}" />
<delete dir="${restricted}" />
</target>

</project>
