//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.12.01 at 04:25:51 GMT+02:00 
//


package extensionTools.opl2.generated.impl;

public class StateTimeoutSentenceTypeImpl implements extensionTools.opl2.generated.StateTimeoutSentenceType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected extensionTools.opl2.generated.MaxTimeoutValueType _MaxTimeoutValue;
    protected extensionTools.opl2.generated.MaxReactionTimeType _MaxReactionTime;
    protected extensionTools.opl2.generated.MinReactionTimeType _MinReactionTime;
    protected java.lang.String _StateName;
    protected com.sun.xml.bind.util.ListImpl _Role = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _ObjectName;
    protected java.lang.String _LogicalRelation;
    protected com.sun.xml.bind.util.ListImpl _PathLabel = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _TriggeredProcess = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0013\u00e2\u00d9;ppsq\u0000~\u0000\u0000\u0011\u001c\u00ad\u00f4ppsq\u0000~\u0000\u0000\u000eV\u0082\u00adppsq\u0000~\u0000\u0000\u000b\u0090Wfppsq\u0000~\u0000\u0000\t\u00ceN\u0088ppsq\u0000~\u0000\u0000\b\fE\u00b5ppsq\u0000~\u0000\u0000\u0006J<\u00e5ppsq\u0000~\u0000\u0000\u0004\u00884\u0015ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00c2\b\u00cbpp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00c2\b\u00c0ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001dq\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\nObjectNamet\u0000\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00c6+Eppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00c6+:sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000*\u0002\u00c6+7q\u0000~\u00000psq\u0000~\u0000\r\u0001c\u0015\u00a0q\u0000~\u00000p\u0000sq\u0000~\u0000\r\u0001c\u0015\u0095pp\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003\u0001c\u0015|q\u0000~\u00000psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000/\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000:psq\u0000~\u0000%t\u0000&extensionTools.opl2.generated.RoleTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000%t\u0000\u0004Roleq\u0000~\u0000)sq\u0000~\u0000\r\u0001c\u0015\u0095q\u0000~\u00000p\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u0000\"extensionTools.opl2.generated.Roleq\u0000~\u0000Aq\u0000~\u0000>sq\u0000~\u0000\r\u0001\u00c2\b\u00cbpp\u0000q\u0000~\u0000\u0014sq\u0000~\u0000%t\u0000\tStateNameq\u0000~\u0000)sq\u0000~\u0000\r\u0001\u00c2\b\u00cbpp\u0000q\u0000~\u0000\u0014sq\u0000~\u0000%t\u0000\u000fLogicalRelationq\u0000~\u0000)sq\u0000~\u0000,\u0001\u00c2\b\u00ceppsq\u0000~\u0000\r\u0001\u00c2\b\u00cbpp\u0000q\u0000~\u0000\u0014sq\u0000~\u0000%t\u0000\u0010TriggeredProcessq\u0000~\u0000)sq\u0000~\u0000*\u0001\u00c2\b\u00d9ppsq\u0000~\u0000,\u0001\u00c2\b\u00ceq\u0000~\u00000psq\u0000~\u0000\r\u0001\u00c2\b\u00cbq\u0000~\u00000p\u0000q\u0000~\u0000\u0014sq\u0000~\u0000%t\u0000\tPathLabelq\u0000~\u0000)q\u0000~\u0000>sq\u0000~\u0000*\u0002\u00c6+Bppsq\u0000~\u0000*\u0002\u00c6+7q\u0000~\u00000psq\u0000~\u0000\r\u0001c\u0015\u00a0q\u0000~\u00000p\u0000sq\u0000~\u0000\r\u0001c\u0015\u0095pp\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u00001extensionTools.opl2.generated.MinReactionTimeTypeq\u0000~\u0000Asq\u0000~\u0000%t\u0000\u000fMinReactionTimeq\u0000~\u0000)sq\u0000~\u0000\r\u0001c\u0015\u0095q\u0000~\u00000p\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u0000-extensionTools.opl2.generated.MinReactionTimeq\u0000~\u0000Aq\u0000~\u0000>sq\u0000~\u0000*\u0002\u00c6+Bppsq\u0000~\u0000*\u0002\u00c6+7q\u0000~\u00000psq\u0000~\u0000\r\u0001c\u0015\u00a0q\u0000~\u00000p\u0000sq\u0000~\u0000\r\u0001c\u0015\u0095pp\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u00001extensionTools.opl2.generated.MaxReactionTimeTypeq\u0000~\u0000Asq\u0000~\u0000%t\u0000\u000fMaxReactionTimeq\u0000~\u0000)sq\u0000~\u0000\r\u0001c\u0015\u0095q\u0000~\u00000p\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u0000-extensionTools.opl2.generated.MaxReactionTimeq\u0000~\u0000Aq\u0000~\u0000>sq\u0000~\u0000*\u0002\u00c6+Bppsq\u0000~\u0000*\u0002\u00c6+7q\u0000~\u00000psq\u0000~\u0000\r\u0001c\u0015\u00a0q\u0000~\u00000p\u0000sq\u0000~\u0000\r\u0001c\u0015\u0095pp\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u00001extensionTools.opl2.generated.MaxTimeoutValueTypeq\u0000~\u0000Asq\u0000~\u0000%t\u0000\u000fMaxTimeoutValueq\u0000~\u0000)sq\u0000~\u0000\r\u0001c\u0015\u0095q\u0000~\u00000p\u0000sq\u0000~\u0000*\u0001c\u0015\u008appsq\u0000~\u0000,\u0001c\u0015\u007fq\u0000~\u00000psq\u0000~\u00006\u0001c\u0015|q\u0000~\u00000pq\u0000~\u00009q\u0000~\u0000<q\u0000~\u0000>sq\u0000~\u0000%t\u0000-extensionTools.opl2.generated.MaxTimeoutValueq\u0000~\u0000Aq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u008d[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000$\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppq\u0000~\u0000Tppppppq\u0000~\u0000\u0007q\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u00001q\u0000~\u0000Zq\u0000~\u0000kq\u0000~\u0000.q\u0000~\u0000|ppppppq\u0000~\u0000Yq\u0000~\u0000jq\u0000~\u0000{q\u0000~\u0000+q\u0000~\u0000\fq\u0000~\u0000\u000bq\u0000~\u0000\nq\u0000~\u0000\tppppppppq\u0000~\u00005q\u0000~\u0000Fq\u0000~\u0000^q\u0000~\u0000fq\u0000~\u0000\bq\u0000~\u0000oq\u0000~\u0000wq\u0000~\u0000\u0006q\u0000~\u0000\u0080q\u0000~\u0000\u0088pq\u0000~\u00004q\u0000~\u0000Eq\u0000~\u0000]q\u0000~\u0000eq\u0000~\u0000nq\u0000~\u0000vq\u0000~\u0000\u007fq\u0000~\u0000\u0087pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Pq\u0000~\u0000U");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return extensionTools.opl2.generated.StateTimeoutSentenceType.class;
    }

    public extensionTools.opl2.generated.MaxTimeoutValueType getMaxTimeoutValue() {
        return _MaxTimeoutValue;
    }

    public void setMaxTimeoutValue(extensionTools.opl2.generated.MaxTimeoutValueType value) {
        _MaxTimeoutValue = value;
    }

    public extensionTools.opl2.generated.MaxReactionTimeType getMaxReactionTime() {
        return _MaxReactionTime;
    }

    public void setMaxReactionTime(extensionTools.opl2.generated.MaxReactionTimeType value) {
        _MaxReactionTime = value;
    }

    public extensionTools.opl2.generated.MinReactionTimeType getMinReactionTime() {
        return _MinReactionTime;
    }

    public void setMinReactionTime(extensionTools.opl2.generated.MinReactionTimeType value) {
        _MinReactionTime = value;
    }

    public java.lang.String getStateName() {
        return _StateName;
    }

    public void setStateName(java.lang.String value) {
        _StateName = value;
    }

    public java.util.List getRole() {
        return _Role;
    }

    public java.lang.String getObjectName() {
        return _ObjectName;
    }

    public void setObjectName(java.lang.String value) {
        _ObjectName = value;
    }

    public java.lang.String getLogicalRelation() {
        return _LogicalRelation;
    }

    public void setLogicalRelation(java.lang.String value) {
        _LogicalRelation = value;
    }

    public java.util.List getPathLabel() {
        return _PathLabel;
    }

    public java.util.List getTriggeredProcess() {
        return _TriggeredProcess;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new extensionTools.opl2.generated.impl.StateTimeoutSentenceTypeImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = _Role.size();
        int idx8 = 0;
        final int len8 = _PathLabel.size();
        int idx9 = 0;
        final int len9 = _TriggeredProcess.size();
        context.startElement("", "ObjectName");
        context.endAttributes();
        try {
            context.text(((java.lang.String) _ObjectName));
        } catch (java.lang.Exception e) {
            com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx5 != len5) {
            if (_Role.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Role.get(idx5 ++)));
            } else {
                context.startElement("", "Role");
                int idx_1 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Role.get(idx_1 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Role.get(idx5 ++)));
                context.endElement();
            }
        }
        context.startElement("", "StateName");
        context.endAttributes();
        try {
            context.text(((java.lang.String) _StateName));
        } catch (java.lang.Exception e) {
            com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "LogicalRelation");
        context.endAttributes();
        try {
            context.text(((java.lang.String) _LogicalRelation));
        } catch (java.lang.Exception e) {
            com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx9 != len9) {
            context.startElement("", "TriggeredProcess");
            int idx_4 = idx9;
            try {
                idx_4 += 1;
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _TriggeredProcess.get(idx9 ++)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx8 != len8) {
            context.startElement("", "PathLabel");
            int idx_5 = idx8;
            try {
                idx_5 += 1;
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PathLabel.get(idx8 ++)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MinReactionTime!= null) {
            if (_MinReactionTime instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MinReactionTime));
            } else {
                context.startElement("", "MinReactionTime");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _MinReactionTime));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MinReactionTime));
                context.endElement();
            }
        }
        if (_MaxReactionTime!= null) {
            if (_MaxReactionTime instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MaxReactionTime));
            } else {
                context.startElement("", "MaxReactionTime");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _MaxReactionTime));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MaxReactionTime));
                context.endElement();
            }
        }
        if (_MaxTimeoutValue!= null) {
            if (_MaxTimeoutValue instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MaxTimeoutValue));
            } else {
                context.startElement("", "MaxTimeoutValue");
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _MaxTimeoutValue));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MaxTimeoutValue));
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = _Role.size();
        int idx8 = 0;
        final int len8 = _PathLabel.size();
        int idx9 = 0;
        final int len9 = _TriggeredProcess.size();
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = _Role.size();
        int idx8 = 0;
        final int len8 = _PathLabel.size();
        int idx9 = 0;
        final int len9 = _TriggeredProcess.size();
    }

    public java.lang.Class getPrimaryInterface() {
        return (extensionTools.opl2.generated.StateTimeoutSentenceType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "-----------------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return extensionTools.opl2.generated.impl.StateTimeoutSentenceTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  15 :
                    if (("" == ___uri)&&("TimeValue" == ___local)) {
                        _MinReactionTime = ((extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl) spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MinReactionTimeTypeImpl.class), 16, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  3 :
                    if (("" == ___uri)&&("Role" == ___local)) {
                        context.pushAttributes(__atts);
                        goto21();
                        return ;
                    }
                    if (("" == ___uri)&&("StateName" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 4;
                        return ;
                    }
                    break;
                case  0 :
                    if (("" == ___uri)&&("ObjectName" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    break;
                case  12 :
                    if (("" == ___uri)&&("MaxReactionTime" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 17;
                        return ;
                    }
                    if (("" == ___uri)&&("PathLabel" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 13;
                        return ;
                    }
                    if (("" == ___uri)&&("MaxTimeoutValue" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 19;
                        return ;
                    }
                    if (("" == ___uri)&&("TriggeredProcess" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 10;
                        return ;
                    }
                    if (("" == ___uri)&&("MinReactionTime" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 15;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  9 :
                    if (("" == ___uri)&&("TriggeredProcess" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 10;
                        return ;
                    }
                    break;
                case  17 :
                    if (("" == ___uri)&&("TimeValue" == ___local)) {
                        _MaxReactionTime = ((extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl) spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MaxReactionTimeTypeImpl.class), 18, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  19 :
                    if (("" == ___uri)&&("TimeValue" == ___local)) {
                        _MaxTimeoutValue = ((extensionTools.opl2.generated.impl.MaxTimeoutValueTypeImpl) spawnChildFromEnterElement((extensionTools.opl2.generated.impl.MaxTimeoutValueTypeImpl.class), 20, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  6 :
                    if (("" == ___uri)&&("LogicalRelation" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 7;
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  8 :
                    if (("" == ___uri)&&("LogicalRelation" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  5 :
                    if (("" == ___uri)&&("StateName" == ___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  18 :
                    if (("" == ___uri)&&("MaxReactionTime" == ___local)) {
                        context.popAttributes();
                        state = 12;
                        return ;
                    }
                    break;
                case  12 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  11 :
                    if (("" == ___uri)&&("TriggeredProcess" == ___local)) {
                        context.popAttributes();
                        state = 12;
                        return ;
                    }
                    break;
                case  14 :
                    if (("" == ___uri)&&("PathLabel" == ___local)) {
                        context.popAttributes();
                        state = 12;
                        return ;
                    }
                    break;
                case  2 :
                    if (("" == ___uri)&&("ObjectName" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  20 :
                    if (("" == ___uri)&&("MaxTimeoutValue" == ___local)) {
                        context.popAttributes();
                        state = 12;
                        return ;
                    }
                    break;
                case  22 :
                    if (("" == ___uri)&&("Role" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
                case  16 :
                    if (("" == ___uri)&&("MinReactionTime" == ___local)) {
                        context.popAttributes();
                        state = 12;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  12 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
                case  21 :
                    if (("" == ___uri)&&("RoleName" == ___local)) {
                        _Role.add(((extensionTools.opl2.generated.impl.RoleTypeImpl) spawnChildFromEnterAttribute((extensionTools.opl2.generated.impl.RoleTypeImpl.class), 22, ___uri, ___local)));
                        return ;
                    }
                    if (("" == ___uri)&&("Library" == ___local)) {
                        _Role.add(((extensionTools.opl2.generated.impl.RoleTypeImpl) spawnChildFromEnterAttribute((extensionTools.opl2.generated.impl.RoleTypeImpl.class), 22, ___uri, ___local)));
                        return ;
                    }
                    break;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  12 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  10 :
                        try {
                            _TriggeredProcess.add(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 11;
                        return ;
                    case  7 :
                        try {
                            _LogicalRelation = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 8;
                        return ;
                    case  13 :
                        try {
                            _PathLabel.add(value);
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 14;
                        return ;
                    case  12 :
                        revertToParentFromText(value);
                        return ;
                    case  1 :
                        try {
                            _ObjectName = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 2;
                        return ;
                    case  4 :
                        try {
                            _StateName = value;
                        } catch (java.lang.Exception e) {
                            handleParseConversionException(e);
                        }
                        state = 5;
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  20 :
                    state = 20;
                    return ;
                case  22 :
                    state = 22;
                    return ;
                case  18 :
                    state = 18;
                    return ;
                case  16 :
                    state = 16;
                    return ;
            }
            super.leaveChild(nextState);
        }

        private void goto21()
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            int idx;
            state = 21;
            idx = context.getAttribute("", "RoleName");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
            idx = context.getAttribute("", "Library");
            if (idx >= 0) {
                context.consumeAttribute(idx);
                return ;
            }
        }

    }

}
